// Generated by Dagger (https://dagger.dev).
package com.example.domain.usecase;

import com.example.domain.repo.TodoRepository;
import dagger.internal.DaggerGenerated;
import dagger.internal.Factory;
import dagger.internal.QualifierMetadata;
import dagger.internal.ScopeMetadata;
import javax.inject.Provider;

@ScopeMetadata
@QualifierMetadata
@DaggerGenerated
@SuppressWarnings({
    "unchecked",
    "rawtypes",
    "KotlinInternal",
    "KotlinInternalInJava"
})
public final class AddTodoUseCase_Factory implements Factory<AddTodoUseCase> {
  private final Provider<TodoRepository> repositoryProvider;

  public AddTodoUseCase_Factory(Provider<TodoRepository> repositoryProvider) {
    this.repositoryProvider = repositoryProvider;
  }

  @Override
  public AddTodoUseCase get() {
    return newInstance(repositoryProvider.get());
  }

  public static AddTodoUseCase_Factory create(Provider<TodoRepository> repositoryProvider) {
    return new AddTodoUseCase_Factory(repositoryProvider);
  }

  public static AddTodoUseCase newInstance(TodoRepository repository) {
    return new AddTodoUseCase(repository);
  }
}
